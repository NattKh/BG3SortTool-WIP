<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Ff8XFxf/FBUQ/x0eGf8hJBz/FBgU/w8TEf8QFBD/Gh0f/xwfIv8NExH/DBAQ/wEAAP8mJjH/QkVa/zQ0
        P/84NT//QkBM/09Vdf84QWP/Dg4K/xMWFP8SFBL/ERIP/xESEP8REhD/EBIP/wsPDf8QEhD/FRcV/xYX
        F/8UFhD/GhsX/x0fF/8VFxT/ERQS/w4RDf8QFBX/ISUn/wwSEP8HDAv/CQgD/ycpMv8/Q1f/Jygy/yQk
        Lf8mJTD/OT1Z/yYtQ/8JCwX/EBEP/w8PDf8QEQ3/EBEO/w8QDv8ZGxf/GBoX/w4PDf8LDw3/Cg0M/xIT
        Dv8YGxT/HiAX/xUXFP8MEQ7/CxAL/woMDP8dICP/Fhoa/wYKCf8CAgD/Gx8o/ysrNf8NCgz/FRYl/yck
        MP85OU3/LTVV/woOC/8NDgv/CgsH/xARDP8QEQ3/ExUR/yMkIP8YGBX/CQsJ/wkNC/8JDQv/EhMO/xwe
        F/8hIhr/FBgW/wsRDv8MEQ7/Cw4K/xUZF/8eIST/Cw4M/wQFAv8RERH/EgwG/xwYHP85OEn/PDlH/z48
        VP9DVYf/Iy1E/wsKBv8NDgz/ERIO/xESD/8VGBX/Hh8b/xUWEf8LDwv/DA8N/wcNC/8VFxH/HR8Z/x4g
        Gf8WGhf/DRMR/wsQDf8OEg7/FRYS/x4gIv8ZGxz/Dg0K/xMQCP8UDgf/Kygw/zU0Qf8sKj3/LytH/zE8
        bP85S3f/Dw8Q/xQUEf8UFRH/DhAO/w8SEP8TFhP/FRgT/xESD/8MDw3/CA4M/xMVEP8YGhX/FxkT/xEV
        E/8NERD/CxAN/w0RDv8VFxL/ExcT/xgcIP8SERD/Ew4G/xcUFP8yMT//PDpG/zo4Tf80Nk//RE5+/0NU
        hv8QExr/ERIN/xITEP8PEQ//DhIQ/xATEf8RExH/EhMR/xMXFf8QFBL/EBEN/xcZE/8ZHBb/DhIP/wwQ
        DP8OEQ7/DhEO/xYZEv8OEQ//ERcd/xYTFP8TCwX/Fxgd/zQ2RP8+PEL/NjVJ/yQoRP8+SHP/TVuT/xge
        MP8NDQj/DhAN/wwPDf8MDw3/DBAN/wwPDf8OEQ//EhUT/w8REP8REg//FBYP/xsdFv8PEw7/DBEL/w8S
        D/8REg//FRcR/w4REP8WFh//EAwI/w8LBf8kJS7/TExg/0JAUP9GSV7/UFiA/05clv9db6//JzJP/wgI
        Av8OEAz/CQwK/wsOC/8RFRL/FBcV/xUXFf8SFRP/EBMR/xUWEv8VFxH/GR0W/xATEf8PEw7/DhIO/w4R
        Dv8TFQ//FRcY/x0cJ/8QCwf/DQoG/yUmMf8xLz7/KCIw/0FDV/9LU4L/JylL/yYsT/8fKEL/CAsF/wsP
        C/8ICgr/BwkJ/wgLC/8NEQ//ExQS/xASEP8NEA7/FRYT/xkaFf8bHRj/DxQR/w8TD/8PEQ7/EBMP/xMW
        D/8NERD/EhMV/w8MCP8NCwb/KSg2/yYpOP8XFRr/GRoj/ztBXP8WFSj/Ii1M/xkhNf8NDwn/DhMN/woN
        Cv8JCwr/Cg4M/w0PD/8QEhD/DA0L/woNC/8WFxP/GBoU/xocFv8RFBL/EBMP/w8RDf8SFRD/FRgT/woO
        C/8ODw3/ExEP/xEPC/8rJy7/QkFP/zIxO/8lJCj/OzxJ/yoxR/8sOlv/Fh8r/w8RDf8PEw//DhEO/w8R
        EP8NEA//Cw8P/w0REP8NDw3/Cw0L/xYYEv8YGhT/GBoU/xETEv8PEg//DhIN/xUXEv8ZHBb/DQ8N/xAQ
        Dv8REA//FBMS/xcUDf8ZFhD/HBsY/zAtK/8gGxr/JSsy/xscIf8QFBf/EhUT/xIVE/8OEhL/DhIS/w4T
        Ev8LEA//CxAO/xESEP8RExH/FRcR/xkbFf8aHBb/ERMS/w8SEP8QFBH/EhYQ/xYaFP8OEQz/FBUR/xUW
        FP8cHBr/IR4Y/x4aFv8jIiX/LTI4/yMpM/8YJDL/GSIw/xUbH/8VGBX/FRgX/xEVFf8PFBP/EBUU/w0S
        Ef8NEQ//GBkV/xUXFP8VFxH/GRsU/xkaFf8RFRP/ERYR/xATEP8RFA7/FBcR/wwPCv8MDQr/FxgW/yUl
        I/8pJyL/IyQl/xsmMv8cKTT/GSQu/xEaIv8VHSb/Fhsa/xcaF/8XGRj/EhUV/xAVFP8TFxb/ERQU/wsN
        DP8YGhX/GxwZ/xQVEv8ZGxT/FxgT/xEVE/8QFRH/DBAL/xIVEP8VGRT/BQkE/zk6N/87PTz/HyAf/xkX
        E/8XFRT/ERUZ/xIWGf8TFhb/EhUX/xMVFP8TFRL/EhUT/w8SEf8NDw//DA8P/wwPD/8LDQ3/BwoI/woN
        Cv8NEA3/FhcT/xocFf8XGRX/EhUT/xIWEf8PFA7/ExcR/xkdF/8ICgb/Q0RC/29yc/9fY2X/FxkZ/x8i
        I/8TFxn/DA8O/woODP8KDgv/DQ4K/w8QDf8NEA3/BwkJ/wYJCP8JDAr/CAsI/wgMCf8KDQv/Cg0L/wkM
        Cv8WGRH/GRwU/xkcFv8SFhP/ExYR/xEUEf8UGRL/FxsV/xARDP8QEAr/MDM1/ztDS/8vMjT/JCYn/woP
        Dv8ECAf/CAwI/wwQCv8NDwv/ERIO/xASD/8JDAr/BwwK/wkPC/8JDwr/DBAN/w4RD/8OEQ//DQ8N/xYZ
        EP8aHRT/Gh4X/xMXE/8SFhL/EBMR/xQYE/8VGRT/EBMN/xESC/8bHhz/HiEh/xIVE/8KDgn/ChAL/wcM
        Cf8LDgn/DRIL/w4RDv8QFBD/EBMR/w8TDv8JDgz/Bw0K/wwSDf8RFBH/ExQS/w4RD/8NEA7/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA=
</value>
  </data>
</root>